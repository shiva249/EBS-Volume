import boto3
import json

def lambda_handler(event, context):
    # Define regions
    regions = ["ap-south-1", "us-east-2", "us-west-2"]
    sns_topic_arn = 'arn:aws:sns:us-east-1:589662475172:gp2-volume'  # Replace with your SNS topic ARN

    def get_instance_details(region, instance_id):
        ec2 = boto3.client('ec2', region_name=region)
        response = ec2.describe_instances(InstanceIds=[instance_id])
        instance = response['Reservations'][0]['Instances'][0]
        instance_name = next((tag['Value'] for tag in instance.get('Tags', []) if tag['Key'] == 'Name'), 'No Name')
        return instance_id, instance_name

    def get_volume_details(region, volume_id):
        ec2 = boto3.client('ec2', region_name=region)
        response = ec2.describe_volumes(VolumeIds=[volume_id])
        volume = response['Volumes'][0]
        volume_type = volume['VolumeType']
        instance_id = volume['Attachments'][0]['InstanceId']
        return volume_id, volume_type, instance_id

    def get_instance_ids(region):
        ec2 = boto3.client('ec2', region_name=region)
        response = ec2.describe_instances(Filters=[{'Name': 'tag-value', 'Values': ['*a205832*']}])
        instance_ids = [instance['InstanceId'] for reservation in response['Reservations'] for instance in reservation['Instances']]
        return instance_ids

    def check_consistent_gp2_volumes(region, instance_ids):
        if not instance_ids:
            return False
        ec2 = boto3.client('ec2', region_name=region)
        consistent = True
        first_instance_id = instance_ids[0]
        response = ec2.describe_volumes(Filters=[{'Name': 'attachment.instance-id', 'Values': [first_instance_id]}])
        first_instance_volumes = response['Volumes']
        if all(volume['VolumeType'] == 'gp2' for volume in first_instance_volumes):
            for instance_id in instance_ids:
                response = ec2.describe_volumes(Filters=[{'Name': 'attachment.instance-id', 'Values': [instance_id]}])
                if not all(volume['VolumeType'] == 'gp2' for volume in response['Volumes']):
                    consistent = False
                    break
        else:
            consistent = False
        return consistent

    def send_sns_message(subject, message):
        sns = boto3.client('sns')
        response = sns.publish(
            TopicArn=sns_topic_arn,
            Subject="GP2 Volumes",
            Message=message
        )
        return response

    email_body = "GP2 Volumes has listed in the account - a205832"

    # Iterate over regions
    for region in regions:
        email_body += f"Region: {region}\n"
        
        # Fetch instance IDs with the specified tag value
        instance_ids = get_instance_ids(region)
        if not instance_ids:
            email_body += f"No instances found in region {region} with the specified tag value.\n"
            continue
        
        # Check if instances have consistent gp2 volumes
        consistent_gp2_volumes = check_consistent_gp2_volumes(region, instance_ids)
        
        if consistent_gp2_volumes:
            email_body += f"Instances in {region} have consistent gp2 volumes\n"
            email_body += "Instance ID | Instance Name | Volume ID | Volume Type\n"
            for instance_id in instance_ids:
                # Get instance details
                instance_id, instance_name = get_instance_details(region, instance_id)
                
                # Get volume IDs associated with the instance
                ec2 = boto3.client('ec2', region_name=region)
                response = ec2.describe_volumes(Filters=[{'Name': 'attachment.instance-id', 'Values': [instance_id]}])
                volume_ids = [volume['VolumeId'] for volume in response['Volumes'] if volume['VolumeType'] == 'gp2']
                
                for volume_id in volume_ids:
                    # Get volume details
                    volume_id, volume_type, _ = get_volume_details(region, volume_id)
                    
                    # Append volume details to email body
                    email_body += f"{instance_id} | {instance_name} | {volume_id} | {volume_type}\n"
        else:
            email_body += f"Instances in {region} do not have consistent gp2 volumes\n"

    # Send email using SNS
    send_sns_message("GP2 Volume Check", email_body)
