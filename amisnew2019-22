1. to get amis and snapshot details
---------------------------------------
#!/bin/bash

# Define the regions to check
regions=("us-east-1" "eu-west-1" "eu-west-2")
# Define the date range
start_date="2019-01-01T00:00:00Z"
end_date="2022-12-31T23:59:59Z"
# Output CSV file
output_file="ami_snapshots_details.csv"

# Create CSV header
echo "Region,AMI ID,AMI Description,Creation Date,Snapshot ID,Snapshot Description,Snapshot Start Time,Volume ID" > $output_file

# Loop through each region
for region in "${regions[@]}"
do
  echo "Fetching AMIs in region: $region"
  
  # Describe images and filter by creation date and owner
  ami_data=$(aws ec2 describe-images \
    --region $region \
    --owners self \
    --query "Images[?CreationDate>='$start_date' && CreationDate<='$end_date'].[ImageId,Description,CreationDate,BlockDeviceMappings[*].Ebs.SnapshotId]" \
    --output text)
  
  # Check if there are AMIs found
  if [ -n "$ami_data" ]; then
    while IFS=$'\t' read -r ami_id ami_description creation_date snapshot_ids
    do
      # Extract each snapshot ID associated with the AMI
      snapshot_ids=($snapshot_ids)
      for snapshot_id in "${snapshot_ids[@]}"; do
        # Fetch snapshot details
        snapshot_data=$(aws ec2 describe-snapshots \
          --region $region \
          --snapshot-ids $snapshot_id \
          --query "Snapshots[].[SnapshotId,Description,StartTime,VolumeId]" \
          --output text)
        
        if [ -n "$snapshot_data" ]; then
          while IFS=$'\t' read -r snapshot_id snapshot_description snapshot_start_time volume_id
          do
            # Write AMI and snapshot data to CSV file
            echo "$region,$ami_id,\"$ami_description\",$creation_date,$snapshot_id,\"$snapshot_description\",$snapshot_start_time,$volume_id" >> $output_file
          done <<< "$snapshot_data"
        else
          echo "No snapshot details found for Snapshot ID: $snapshot_id in region: $region"
        fi
      done
    done <<< "$ami_data"
  else
    echo "No AMIs found in region: $region between $start_date and $end_date"
  fi
done

echo "AMI and snapshot details saved to $output_file."
-----------------------------------------------------------------------------------
2.
------
#!/bin/bash

# Define the regions to check
regions=("us-east-1" "eu-west-1" "eu-west-2")
# Define the date range
start_date="2019-01-01T00:00:00Z"
end_date="2022-12-31T23:59:59Z"
# Output CSV file
output_file="ami_snapshots_details.csv"

# Create CSV header
echo "Region,AMI ID,AMI Description,Creation Date,Snapshot ID 1,Snapshot Description 1,Snapshot Start Time 1,Volume ID 1,Snapshot ID 2,Snapshot Description 2,Snapshot Start Time 2,Volume ID 2,..." > $output_file

# Determine the maximum number of snapshots to set the headers dynamically
max_snapshots=0
for region in "${regions[@]}"
do
  echo "Checking max snapshots in region: $region"
  num_snapshots=$(aws ec2 describe-images \
    --region $region \
    --owners self \
    --query "Images[?CreationDate>='$start_date' && CreationDate<='$end_date'].BlockDeviceMappings[*].Ebs.SnapshotId" \
    --output text | wc -w)
  if (( num_snapshots > max_snapshots )); then
    max_snapshots=$num_snapshots
  fi
done

# Create the header with the appropriate number of snapshot columns
header="Region,AMI ID,AMI Description,Creation Date"
for i in $(seq 1 $max_snapshots); do
  header="$header,Snapshot ID $i,Snapshot Description $i,Snapshot Start Time $i,Volume ID $i"
done

# Write the header to the output file
echo "$header" > $output_file

# Loop through each region to fetch AMI details
for region in "${regions[@]}"
do
  echo "Fetching AMIs in region: $region"
  
  ami_data=$(aws ec2 describe-images \
    --region $region \
    --owners self \
    --query "Images[?CreationDate>='$start_date' && CreationDate<='$end_date'].[ImageId,Description,CreationDate,BlockDeviceMappings[*].Ebs.SnapshotId]" \
    --output text)
  
  if [ -n "$ami_data" ]; then
    while IFS=$'\t' read -r ami_id ami_description creation_date snapshot_ids
    do
      # Prepare the row with the basic AMI details
      row="$region,$ami_id,\"$ami_description\",$creation_date"
      
      # Fetch details for each snapshot associated with the AMI
      snapshot_ids=($snapshot_ids)
      for snapshot_id in "${snapshot_ids[@]}"; do
        snapshot_data=$(aws ec2 describe-snapshots \
          --region $region \
          --snapshot-ids $snapshot_id \
          --query "Snapshots[].[SnapshotId,Description,StartTime,VolumeId]" \
          --output text)
        
        if [ -n "$snapshot_data" ]; then
          while IFS=$'\t' read -r snapshot_id snapshot_description snapshot_start_time volume_id
          do
            # Add snapshot details to the row
            row="$row,$snapshot_id,\"$snapshot_description\",$snapshot_start_time,$volume_id"
          done <<< "$snapshot_data"
        else
          row="$row,,,,"
        fi
      done
      
      # Append empty fields if there are fewer snapshots than max_snapshots
      for (( i=${#snapshot_ids[@]}; i<max_snapshots; i++ )); do
        row="$row,,,,"
      done
      
      # Write the row to the CSV file
      echo "$row" >> $output_file
    done <<< "$ami_data"
  else
    echo "No AMIs found in region: $region between $start_date and $end_date"
  fi
done

echo "AMI and snapshot details saved to $output_file."
----------------------------------------------------------
3
----------------------
#!/bin/bash

cd /tmp

# Define the date range
START_DATE="2019-01-01"
END_DATE="2022-12-31"

# Define the output file
OUTPUT_FILE="ami_and_snapshots.csv"

# Initialize the output file with a header
echo "Region,ImageID,Name,CreationDate,SnapshotID,VolumeID,StartTime" > $OUTPUT_FILE

# Get your AWS account ID
ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
if [ $? -ne 0 ]; then
    echo "Error getting AWS account ID. Ensure that AWS CLI is configured correctly."
    exit 1
fi

# Define the regions to check
REGIONS=("us-east-1" "eu-west-1" "eu-west-2")

# Function to check if a date is within the range
is_date_in_range() {
    DATE=$1
    START_DATE="2019-01-01T00:00:00Z"
    END_DATE="2022-12-31T23:59:59Z"

    if [[ "$DATE" > "$START_DATE" && "$DATE" < "$END_DATE" ]]; then
        echo 1
    else
        echo 0
    fi
}

# Loop through each region
for REGION in "${REGIONS[@]}"; do
    echo "Processing region: $REGION"
    
    # Get the list of AMIs created by you in the specified date range
    AMIS=$(aws ec2 describe-images --region $REGION --owners self --query "Images[?CreationDate>='${START_DATE}T00:00:00Z' && CreationDate<='${END_DATE}T23:59:59Z'].[ImageId,Name,CreationDate]" --output text)
    if [ $? -ne 0 ]; then
        echo "Error describing images in region $REGION. Ensure that you have the necessary permissions."
        continue
    fi
    
    if [ -z "$AMIS" ]; then
        echo "No AMIs found in region $REGION within the specified date range."
        continue
    fi
            
            if [ -z "$SNAPSHOTS" ]; then
                echo "No snapshots found for image $IMAGE_ID in region $REGION."
                continue
            fi
            
            echo "$SNAPSHOTS" | while read -r SNAPSHOT_ID VOLUME_ID START_TIME; do
                # Check if the snapshot creation date is within the specified range
                if [ $(is_date_in_range $START_TIME) -eq 1 ]; then
                    echo "$REGION,$IMAGE_ID,$NAME,$CREATION_DATE,$SNAPSHOT_ID,$VOLUME_ID,$START_TIME,$TAG_VALUE" >> $OUTPUT_FILE
                fi
            done
    done

# Notify the user
echo "AMIs and associated snapshots created between 2019 and 2022 have been saved to $OUTPUT_FILE"
------------------------------------------------------------------------
4
---------------------------------------
#!/bin/bash

cd /tmp

# Define the date range
START_DATE="2019-01-01"
END_DATE="2022-12-31"

# Define the output file
OUTPUT_FILE="ami_and_snapshots.csv"

# Initialize the output file with a header
echo "Region,ImageID,Name,CreationDate,SnapshotID,VolumeID,StartTime" > $OUTPUT_FILE

# Get your AWS account ID
ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
if [ $? -ne 0 ]; then
    echo "Error getting AWS account ID. Ensure that AWS CLI is configured correctly."
    exit 1
fi

# Define the regions to check
REGIONS=("us-east-1" "eu-west-1" "eu-west-2")

# Function to check if a date is within the range
is_date_in_range() {
    DATE=$1
    START_DATE="2019-01-01T00:00:00Z"
    END_DATE="2022-12-31T23:59:59Z"

    if [[ "$DATE" > "$START_DATE" && "$DATE" < "$END_DATE" ]]; then
        echo 1
    else
        echo 0
    fi
}

# Loop through each region
for REGION in "${REGIONS[@]}"; do
    echo "Processing region: $REGION"
    
    # Get the list of AMIs created by you in the specified date range
    AMIS=$(aws ec2 describe-images --region $REGION --owners self --query "Images[?CreationDate>='${START_DATE}T00:00:00Z' && CreationDate<='${END_DATE}T23:59:59Z'].[ImageId,Name,CreationDate]" --output text)
    if [ $? -ne 0 ]; then
        echo "Error describing images in region $REGION. Ensure that you have the necessary permissions."
        continue
    fi
    
    if [ -z "$AMIS" ]; then
        echo "No AMIs found in region $REGION within the specified date range."
        continue
    fi
    
    echo "$AMIS" | while read -r IMAGE_ID NAME CREATION_DATE; do
        # Get the snapshots associated with the AMI
        SNAPSHOTS=$(aws ec2 describe-snapshots --region $REGION --filters Name=owner-id,Values=$ACCOUNT_ID Name=description,Values="*${IMAGE_ID}*" --query "Snapshots[].[SnapshotId,VolumeId,StartTime]" --output text)
        if [ $? -ne 0 ]; then
            echo "Error describing snapshots for image $IMAGE_ID in region $REGION. Ensure that you have the necessary permissions."
            continue
        fi
        
        if [ -z "$SNAPSHOTS" ]; then
            echo "No snapshots found for image $IMAGE_ID in region $REGION."
            continue
        fi
        
        echo "$SNAPSHOTS" | while read -r SNAPSHOT_ID VOLUME_ID START_TIME; do
            # Check if the snapshot creation date is within the specified range
            if [ $(is_date_in_range $START_TIME) -eq 1 ]; then
                echo "$REGION,$IMAGE_ID,$NAME,$CREATION_DATE,$SNAPSHOT_ID,$VOLUME_ID,$START_TIME" >> $OUTPUT_FILE
            fi
        done
    done
done

# Notify the user
echo "AMIs and associated snapshots created between 2019 and 2022 have been saved to $OUTPUT_FILE"

