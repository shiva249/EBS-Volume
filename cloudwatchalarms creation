#!/bin/bash

# Set the thresholds
CPU_THRESHOLD=85
MEMORY_THRESHOLD=85
DISK_THRESHOLD=85
INODE_THRESHOLD=5000

# Set the necessary parameters
NAMESPACE="AWS/EC2"
INSTANCE_ID="i-0f4a7ff52a80373bc"
INSTANCE_NAME="shell"

# Create CloudWatch Alarm for CPU Utilization
aws cloudwatch put-metric-alarm --alarm-name "${INSTANCE_NAME}_CPU_Utilization" \
  --metric-name CPUUtilization \
  --namespace $NAMESPACE \
  --statistic Average \
  --dimensions Name=InstanceId,Value=$INSTANCE_ID \
  --period 300 \
  --evaluation-periods 1 \
  --threshold $CPU_THRESHOLD \
  --comparison-operator GreaterThanThreshold \
  --alarm-actions arn:aws:sns:us-east-1:589662475172:cloudwath \
  --unit Percent

# Create CloudWatch Alarm for Memory Utilization
aws cloudwatch put-metric-alarm --alarm-name "${INSTANCE_NAME}_Memory_Utilization" \
  --metric-name MemoryUtilization \
  --namespace $NAMESPACE \
  --statistic Average \
  --dimensions Name=InstanceId,Value=$INSTANCE_ID \
  --period 300 \
  --evaluation-periods 1 \
  --threshold $MEMORY_THRESHOLD \
  --comparison-operator GreaterThanThreshold \
  --alarm-actions arn:aws:sns:us-east-1:589662475172:cloudwath \
  --unit Percent

# Create CloudWatch Alarm for Instance Status Check Failed
aws cloudwatch put-metric-alarm --alarm-name "${INSTANCE_NAME}_Status_Check_Failed" \
  --metric-name StatusCheckFailed \
  --namespace $NAMESPACE \
  --statistic Maximum \
  --dimensions Name=InstanceId,Value=$INSTANCE_ID \
  --period 60 \
  --evaluation-periods 2 \
  --threshold 1 \
  --comparison-operator GreaterThanOrEqualToThreshold \
  --alarm-actions arn:aws:sns:us-east-1:589662475172:cloudwath

# Function to create CloudWatch alarms for XFS volumes
create_disk_alarms() {
  local MOUNT_POINT=$1
  local DEVICE_NAME=$2

  # Disk Utilization Alarm
  aws cloudwatch put-metric-alarm --alarm-name "${INSTANCE_NAME}_${DEVICE_NAME}_Disk_Utilization" \
    --metric-name DiskSpaceUtilization \
    --namespace System/Linux \
    --statistic Average \
    --dimensions Name=InstanceId,Value=$INSTANCE_ID Name=MountPath,Value=$MOUNT_POINT Name=Filesystem,Value=xfs \
    --period 300 \
    --evaluation-periods 1 \
    --threshold $DISK_THRESHOLD \
    --comparison-operator GreaterThanThreshold \
    --alarm-actions arn:aws:sns:us-east-1:589662475172:cloudwath \
    --unit Percent
[root@ip-172-31-40-250 bin]# cat  cloud.sh
#!/bin/bash

# Set the thresholds
CPU_THRESHOLD=85
MEMORY_THRESHOLD=85
DISK_THRESHOLD=85
INODE_THRESHOLD=5000

# Set the necessary parameters
NAMESPACE="AWS/EC2"
INSTANCE_ID="i-0f4a7ff52a80373bc"
INSTANCE_NAME="shell"

# Create CloudWatch Alarm for CPU Utilization
aws cloudwatch put-metric-alarm --alarm-name "${INSTANCE_NAME}_CPU_Utilization" \
  --metric-name CPUUtilization \
  --namespace $NAMESPACE \
  --statistic Average \
  --dimensions Name=InstanceId,Value=$INSTANCE_ID \
  --period 300 \
  --evaluation-periods 1 \
  --threshold $CPU_THRESHOLD \
  --comparison-operator GreaterThanThreshold \
  --alarm-actions arn:aws:sns:us-east-1:589662475172:cloudwath \
  --unit Percent

# Create CloudWatch Alarm for Memory Utilization
aws cloudwatch put-metric-alarm --alarm-name "${INSTANCE_NAME}_Memory_Utilization" \
  --metric-name MemoryUtilization \
  --namespace $NAMESPACE \
  --statistic Average \
  --dimensions Name=InstanceId,Value=$INSTANCE_ID \
  --period 300 \
  --evaluation-periods 1 \
  --threshold $MEMORY_THRESHOLD \
  --comparison-operator GreaterThanThreshold \
  --alarm-actions arn:aws:sns:us-east-1:589662475172:cloudwath \
  --unit Percent

# Create CloudWatch Alarm for Instance Status Check Failed
aws cloudwatch put-metric-alarm --alarm-name "${INSTANCE_NAME}_Status_Check_Failed" \
  --metric-name StatusCheckFailed \
  --namespace $NAMESPACE \
  --statistic Maximum \
  --dimensions Name=InstanceId,Value=$INSTANCE_ID \
  --period 60 \
  --evaluation-periods 2 \
  --threshold 1 \
  --comparison-operator GreaterThanOrEqualToThreshold \
  --alarm-actions arn:aws:sns:us-east-1:589662475172:cloudwath

# Function to create CloudWatch alarms for XFS volumes
create_disk_alarms() {
  local MOUNT_POINT=$1
  local DEVICE_NAME=$2

  # Disk Utilization Alarm
  aws cloudwatch put-metric-alarm --alarm-name "${INSTANCE_NAME}_${DEVICE_NAME}_Disk_Utilization" \
    --metric-name DiskSpaceUtilization \
    --namespace System/Linux \
    --statistic Average \
    --dimensions Name=InstanceId,Value=$INSTANCE_ID Name=MountPath,Value=$MOUNT_POINT Name=Filesystem,Value=xfs \
    --period 300 \
    --evaluation-periods 1 \
    --threshold $DISK_THRESHOLD \
    --comparison-operator GreaterThanThreshold \
    --alarm-actions arn:aws:sns:us-east-1:589662475172:cloudwath \
    --unit Percent

  # Inode Usage Alarm
  aws cloudwatch put-metric-alarm --alarm-name "${INSTANCE_NAME}_${DEVICE_NAME}_Inode_Usage" \
    --metric-name InodesFree \
    --namespace System/Linux \
    --statistic Minimum \
    --dimensions Name=InstanceId,Value=$INSTANCE_ID Name=MountPath,Value=$MOUNT_POINT Name=Filesystem,Value=xfs \
    --period 300 \
    --evaluation-periods 1 \
    --threshold $INODE_THRESHOLD \
    --comparison-operator LessThanOrEqualToThreshold \
    --alarm-actions arn:aws:sns:us-east-1:589662475172:cloudwath
}

# Check all mounted filesystems
df -T | grep xfs | while read -r line; do
  MOUNT_POINT=$(echo $line | awk '{print $7}')
  DEVICE_NAME=$(echo $line | awk '{print $1}')
  create_disk_alarms "$MOUNT_POINT" "$DEVICE_NAME"
done
